---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: prometheus-config
data:
  prometheus.yml: |
    #my global config
    global:
      scrape_interval:     15s
      evaluation_interval: 15s
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
    rule_files:

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']
      - job_name: 'otelcol'
        scrape_interval: 10s
        static_configs:
        - targets: ['otelcol.monitoring.svc.cluster.local:4319']
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: grafana-datasources
data:
  prometheus.yaml: |-
    {
      "apiVersion": 1,
      "datasources": [
        {
          "access": "proxy",
          "editable": true,
          "name": "prometheus",
          "orgId": 1,
          "type": "promethus",
          "url": "http://prometheus.monitoring.svc:9090",
          "version": 1
        }
      ]
    }
  grafana.ini: |-
    [security]
    admin_user = admin
    admin_password = admin
    [server]
    domain = monitoring.lvh.me
    root_url = http://monitoring.lvh.me/grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: monitoring
  name: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: monitoring
  name: grafana
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: monitoring
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        args:
          - '--storage.tsdb.retention=6h'
          - '--storage.tsdb.path=/prometheus'
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--web.external-url=/prometheus/'
          - '--web.route-prefix=/'
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-storage
          mountPath: /prometheus
      restartPolicy: Always
      volumes:
      - name: prometheus-config
        configMap:
          defaultMode: 420
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: monitoring
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - name: grafana
          containerPort: 3000
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources/prometheus.yaml
            name: grafana-config
            readOnly: false
            subPath: prometheus.yaml
          - mountPath: /etc/grafana/grafana.ini
            name: grafana-config
            subPath: grafana.ini
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana
        - name: grafana-config
          configMap:
            defaultMode: 420
            name: grafana-datasources
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: monitoring
  name: otelcol
  labels:
    app: otelcol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otelcol
  template:
    metadata:
      name: otelcol
      labels:
        app: otelcol
    spec:
      containers:
      - name: otelcol
        image: otel/opentelemetry-collector-contrib:latest
        ports:
        - name: otelcol-http
          containerPort: 4318
        - name: otelcol-grpc
          containerPort: 4317
        - name: prometheus
          containerPort: 4319
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: prometheus
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: grafana
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3000'
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: otelcol
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3000'
spec:
  selector:
    app: otelcol
  ports:
  - protocol: TCP
    port: 4318
    targetPort: 4318
    name: http
  - protocol: TCP
    port: 4317
    targetPort: 4317
    name: grpc
  - protocol: TCP
    port: 4319
    targetPort: 4319
    name: prometheus
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: monitoring
  name: prometheus
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - host: monitoring.lvh.me
    http:
      paths:
      - path: /prometheus(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
      - path: /grafana(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      - path: /otelcol(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: otelcol
            port:
              number: 4318
