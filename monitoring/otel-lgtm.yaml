---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-lgtm
  namespace: monitoring
  labels:
    app: otel-lgtm
data:
  otelcol-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus/collector:
        config:
          scrape_configs:
          - job_name: 'opentelemetry-collector'
            static_configs:
            - targets: ['localhost:8888']
          - job_name: 'kubernetes-cadvisor'
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - role: node
            relabel_configs:
            - replacement: kubernetes.default.svc.cluster.local:443
              target_label: __address__
            - regex: (.+)
              replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
              source_labels:
              - __meta_kubernetes_node_name
              target_label: __metrics_path__
            metric_relabel_configs:
            - source_labels: [__name__]
              action: keep
              regex: 'container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|container_cpu_usage_seconds_total|container_fs_reads_bytes_total|container_fs_reads_total|container_fs_writes_bytes_total|container_fs_writes_total|container_memory_cache|container_memory_rss|container_memory_swap|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total|machine_memory_bytes'
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: false
              server_name: kubernetes
          - job_name: integrations/kubernetes/kubelet
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - role: node
            relabel_configs:
            - replacement: kubernetes.default.svc.cluster.local:443
              target_label: __address__
            - regex: (.+)
              replacement: /api/v1/nodes/$${1}/proxy/metrics
              source_labels:
              - __meta_kubernetes_node_name
              target_label: __metrics_path__
            metric_relabel_configs:
            - source_labels: [__name__]
              action: keep
              regex: 'container_cpu_usage_seconds_total|kubelet_certificate_manager_client_expiration_renew_errors|kubelet_certificate_manager_client_ttl_seconds|kubelet_certificate_manager_server_ttl_seconds|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_cgroup_manager_duration_seconds_count|kubelet_node_config_error|kubelet_node_name|kubelet_pleg_relist_duration_seconds_bucket|kubelet_pleg_relist_duration_seconds_count|kubelet_pleg_relist_interval_seconds_bucket|kubelet_pod_start_duration_seconds_bucket|kubelet_pod_start_duration_seconds_count|kubelet_pod_worker_duration_seconds_bucket|kubelet_pod_worker_duration_seconds_count|kubelet_running_container_count|kubelet_running_containers|kubelet_running_pod_count|kubelet_running_pods|kubelet_runtime_operations_errors_total|kubelet_runtime_operations_total|kubelet_server_expiration_renew_errors|kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubernetes_build_info|namespace_workload_pod|rest_client_requests_total|storage_operation_duration_seconds_count|storage_operation_errors_total|volume_manager_total_volumes'
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: false
              server_name: kubernetes
          - job_name: integrations/kubernetes/kube-state-metrics
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - action: keep
              regex: kube-state-metrics
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            metric_relabel_configs:
            - source_labels: [__name__]
              action: keep
              regex: 'kube_daemonset.*|kube_deployment_metadata_generation|kube_deployment_spec_replicas|kube_deployment_status_observed_generation|kube_deployment_status_replicas_available|kube_deployment_status_replicas_updated|kube_horizontalpodautoscaler_spec_max_replicas|kube_horizontalpodautoscaler_spec_min_replicas|kube_horizontalpodautoscaler_status_current_replicas|kube_horizontalpodautoscaler_status_desired_replicas|kube_job.*|kube_namespace_status_phase|kube_node.*|kube_persistentvolumeclaim_resource_requests_storage_bytes|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_requests|kube_pod_container_status_last_terminated_reason|kube_pod_container_status_restarts_total|kube_pod_container_status_waiting_reason|kube_pod_info|kube_pod_owner|kube_pod_start_time|kube_pod_status_phase|kube_pod_status_reason|kube_replicaset.*|kube_resourcequota|kube_statefulset.*'
          - job_name: integrations/node_exporter
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - action: keep
              regex: prometheus-node-exporter.*
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            - action: replace
              source_labels:
              - __meta_kubernetes_pod_node_name
              target_label: instance
            - action: replace
              source_labels:
              - __meta_kubernetes_namespace
              target_label: namespace
            metric_relabel_configs:
            - source_labels: [__name__]
              action: keep
              regex: 'node_cpu.*|node_exporter_build_info|node_filesystem.*|node_memory.*|process_cpu_seconds_total|process_resident_memory_bytes'
    processors:
      batch:
    exporters:
      otlphttp/metrics:
        endpoint: http://localhost:9090/api/v1/otlp
      otlphttp/traces:
        endpoint: http://localhost:4418
      otlphttp/logs:
        endpoint: http://localhost:3100/otlp
      logging/metrics:
        verbosity: detailed
      logging/traces:
        verbosity: detailed
      logging/logs:
        verbosity: detailed
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlphttp/traces]
          #exporters: [otlphttp/traces,logging/traces]
        metrics:
          receivers: [otlp,prometheus/collector]
          processors: [batch]
          exporters: [otlphttp/metrics]
          #exporters: [otlphttp/metrics,logging/metrics]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlphttp/logs]
          #exporters: [otlphttp/logs,logging/logs]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
  name: otel-lgtm
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
  - apiGroups:
      - ''
    resources:
      - events
      - namespaces
      - namespaces/status
      - nodes
      - nodes/spec
      - pods
      - pods/status
      - replicationcontrollers
      - replicationcontrollers/status
      - resourcequotas
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
subjects:
  - kind: ServiceAccount
    name: otel-lgtm
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: otel-collector
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otel-lgtm
  namespace: monitoring
  labels:
    app: otel-lgtm
spec:
  selector:
    matchLabels:
      app: otel-lgtm
  template:
    metadata:
      name: otel-lgtm
      labels:
        app: otel-lgtm
    spec:
      serviceAccountName: otel-lgtm
      containers:
      - name: otel-lgtm
        image: grafana/otel-lgtm:0.6.0
        ports:
        - name: prometheus
          containerPort: 9090
        - name: grafana
          containerPort: 3000
        - name: otel-grpc
          containerPort: 4317
        - name: otel-http
          containerPort: 4318
        resources:
          requests:
            cpu: 100m
            memory: 1024Mi
          limits:
            memory: 1024Mi
        volumeMounts:
        - name: otelcol-config
          mountPath: /otel-lgtm/otelcol-config.yaml
          subPath: otelcol-config.yaml
      volumes:
      - name: otelcol-config
        configMap:
          name: otel-lgtm
---
apiVersion: v1
kind: Service
metadata:
  name: otel-lgtm
  namespace: monitoring
spec:
  selector:
    app: otel-lgtm
  ports:
  - name: grafana
    port: 3000
    targetPort: grafana
  - name: otel-grpc
    port: 4317
    targetPort: otel-grpc
  - name: otel-http
    port: 4318
    targetPort: otel-http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otel-lgtm
  namespace: monitoring
spec:
  ingressClassName: nginx
  rules:
  - host: "grafana.lvh.me"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: otel-lgtm
            port:
              number: 3000
---
